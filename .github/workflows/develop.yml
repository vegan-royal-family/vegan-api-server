on:
  push:
    branches:
      - develop

name: Deploy Develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Get verion
        id: image
        run: |
          VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache yarn dependencies
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Run linter
        run: yarn lint

      - name: Run unit tests
        run: yarn test:cov

      - name: Docker private registry setting
        run: |
          echo $DOCKER_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_USER --password-stdin
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Image & Push Image
        run: |
          docker build -t $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG -f deploy/develop/Dockerfile .
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG"
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_REPOSITORY: vegan/api-server-dev
          IMAGE_TAG: ${{ steps.image.outputs.version }}

      - name: Checkout vegan-infra repository
        uses: actions/checkout@v2
        with:
          # kubernetes 설정정보 저장소
          repository: vegan-royal-family/vegan-infra
          ref: main
          # 다른 저장소에 push 하려면 Personal Access Token이 필요.
          token: ${{ secrets.ACTION_TOKEN }}
      # 새 이미지 버전으로 파일 수정
      - name: Update Kubernetes resources
        run: |
          perl -i -pe's/image: harbor.kyojs.com\/vegan\/api-server-dev:.*/image: harbor.kyojs.com\/vegan\/api-server-dev:${{ steps.image.outputs.version }}/' api-server/api-server-dev.yaml

      # 수정된 파일 commit & push
      - name: Commit files
        run: |
          cd api-server
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git commit -am "Update image tag"
          git push -u origin main

      - name: Test Success
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          details: Github Action Succeeded!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Test Failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: Github Action Failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Test Cancelled
        uses: rjstone/discord-webhook-notify@v1
        if: cancelled()
        with:
          severity: warn
          details: Github Action Cancelled!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
